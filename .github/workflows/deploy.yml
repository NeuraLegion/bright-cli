name: Automated deploy

on:
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.release.tag_name }}
      TAG: ${{ github.event.release.target_commitish }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.GPR_TOKEN }}

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci -q --ignore-scripts
      - run: npm run build -- --env version=$VERSION
      - run: npm run build:pkg -- -t node14-linux-x64
      - run: npm version --no-git-tag-version $VERSION
      - run: npm pack

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./neuralegion-nexploit-cli-*
          tag: ${{ github.ref }}
          file_glob: true

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./bin/nexploit-cli
          asset_name: nexploit-cli-linux-x64
          tag: ${{ github.ref }}

      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            dist
            Dockerfile
            package.json
            package-lock.json
            README.md
            LICENSE
            tools
            schemas

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      VERSION: ${{ github.event.release.tag_name }}
      TAG: ${{ github.event.release.target_commitish }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build

      - if: ${{ github.event.release.target_commitish == 'master' }}
        run: echo "TAG=latest" >> $GITHUB_ENV

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci -q --ignore-scripts

      - run: npm publish --tag $TAG
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
          scope: '@NeuraLegion'

      - run: npm publish --tag $TAG
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_TOKEN }}

      - run: sleep 30

      - name: Prepare Image Tags
        run: |
          echo "TAG_REPEATER=neuralegion/repeater" >> $GITHUB_ENV

      - name: Build Images
        run: |
          docker build . --file Dockerfile --build-arg VERSION=$VERSION -t $TAG_REPEATER:$VERSION -t $TAG_REPEATER:$TAG

      - name: Push Images
        run: |
          docker login --username=${{ secrets.DOCKER_USER }} --password=${{ secrets.DOCKER_TOKEN }}
          docker push $TAG_REPEATER --all-tags

  publish:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - run: npm ci -q --ignore-scripts
      - run: npm rebuild
      - run: npm run build:pkg -- -t node14-windows-x64
      - run: npm rebuild os-service --target=v14.7.0 --arch=x64
      - run: |
          Copy-Item ".\node_modules\@neuralegion\os-service\build\Release\service.node" -Destination ".\bin\service.node"
          Copy-Item ".\node_modules\win-ca\lib\crypt32-ia32.node" -Destination ".\bin\crypt32-ia32.node"
          Copy-Item ".\node_modules\win-ca\lib\crypt32-x64.node" -Destination ".\bin\crypt32-x64.node"
          Copy-Item ".\node_modules\win-ca\lib\roots.exe" -Destination ".\bin\roots.exe"

      - run: |
          curl -OLS https://github.com/wixtoolset/wix3/releases/download/wix3111rtm/wix311.exe
          .\wix311.exe /install /quiet /norestart

      - run: .\tools\msi\build.ps1
        shell: pwsh
        continue-on-error: true

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\bin\nexploit-cli.msi
          asset_name: nexploit-cli.msi
          tag: ${{ github.ref }}
