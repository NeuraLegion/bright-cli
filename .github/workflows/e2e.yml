name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Bright CLI version (e.g.: 10.3.1)"
        required: true
      test-docker:
        type: boolean
        description: "Test Docker"
        default: true
      test-executables:
        type: boolean
        description: "Test Executables"
        default: true
      test-npm:
        type: boolean
        description: "Test NPM"
        default: true
      repeater_max_test_timeout:
        description: "Max repeater test timeout (sec)"
        default: 3600
        required: true

jobs:
  executables:
    if: ${{ inputs.test-executables }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            container: ubuntu:18.04
            executable: bright-cli-linux-x64
            node: 16
          - os: ubuntu-latest
            container: ubuntu:16.04
            executable: bright-cli-linux-x64
            node: 14
          - os: ubuntu-latest
            container: fedora:latest
            executable: bright-cli-linux-x64
            node: 18
          - os: macos-latest
            executable: bright-cli-macos-x64
            node: 18
          - os: windows-latest
            executable: bright-cli-win-x64.exe
            node: 18
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Packages (${{ matrix.container }})
        if: ${{ startsWith(matrix.container, 'fedora') }}
        run: |
          dnf -y update \
            && dnf install -y python gcc-c++ \
            && dnf clean all

      - name: Install Packages (${{ matrix.container }})
        if: startsWith(matrix.container, 'ubuntu')
        run: |
          apt-get update -yq \
            && apt-get install build-essential curl python python-dev python3-pip g++-4.8 gcc-4.8 -yq \
            && apt-get clean \
            && rm -rf /var/lib/apt/lists/*

      - name: Install Dependencies
        uses: ./.github/workflows/composite/npm
        with:
          version: ${{ matrix.node }}
          # https://github.com/actions/setup-node/issues/286#issuecomment-878865957
          cache: ''

      - name: Download Executable
        shell: bash
        run: |
          curl --compressed --location https://github.com/NeuraLegion/bright-cli/releases/download/v${{ inputs.version }}/${{ matrix.executable }} -o ./${{ matrix.executable }}
          chmod +x ./${{ matrix.executable }}

      - name: Run Target
        uses: ./.github/workflows/composite/todoapp

      - name: Run Tests
        run: npm run test:e2e 
        env:
          E2E_CLI_CMD: ${{ runner.os != 'windows' && format('./{0}', matrix.executable) || format('.\{0}', matrix.executable) }}
          E2E_RUN_ID: ${{ format('{0}-{1}-{2}-{3}', github.run_number, github.run_attempt, github.job, strategy.job-index) }}
          E2E_CLUSTER: ${{ secrets.E2E_TEST_HOST }}
          E2E_REPEATER_API_KEY: ${{ secrets.E2E_TEST_TOKEN }}
          E2E_REPEATER_TARGET_URL: "http://localhost:9000"
          E2E_REPEATER_MAX_TEST_TIMEOUT: ${{ inputs.repeater_max_test_timeout }}
  docker:
    if: ${{ inputs.test-docker }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Windows can't run linux docker images: https://github.com/actions/runner-images/issues/1143
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Docker (${{ matrix.os }})
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew install docker
          colima start

      - name: Install Dependencies
        uses: ./.github/workflows/composite/npm
        with:
          # https://github.com/actions/setup-node/issues/286#issuecomment-878865957
          cache: ''
          
      - name: Pull Image
        run: docker pull neuralegion/repeater:v${{ inputs.version }}

      - name: Run Target
        uses: ./.github/workflows/composite/todoapp 

      - name: Run Tests
        run: npm run test:e2e 
        env:
          E2E_CLI_CMD: docker run --add-host host.docker.internal:host-gateway --network host neuralegion/repeater:v${{ inputs.version }}
          E2E_RUN_ID: ${{ format('{0}-{1}-{2}-{3}', github.run_number, github.run_attempt, github.job, strategy.job-index) }}
          E2E_CLUSTER: ${{ secrets.E2E_TEST_HOST }}
          E2E_REPEATER_API_KEY: ${{ secrets.E2E_TEST_TOKEN }}
          E2E_REPEATER_TARGET_URL: "http://host.docker.internal:9000"
          E2E_REPEATER_MAX_TEST_TIMEOUT: ${{ inputs.repeater_max_test_timeout }}
  npm:
    if: ${{ inputs.test-npm }} 
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        node: [14, 16, 18]
        include:
          - os: ubuntu-latest
            node: 14
          - os: ubuntu-latest
            node: 16
          - os: ubuntu-latest
            node: 18
          - os: ubuntu-latest
            container: ubuntu:16.04
            node: 14
          - os: ubuntu-latest
            container: fedora:latest
            node: 18
        exclude:
          - os: windows-latest
            node: 14
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Packages (${{ matrix.container }})
        if: ${{ startsWith(matrix.container, 'fedora') }}
        run: |
          dnf -y update \
            && dnf install -y python gcc-c++ \
            && dnf clean all

      - name: Install Packages (${{ matrix.container }})
        if: startsWith(matrix.container, 'ubuntu')
        run: |
          apt-get update -yq \
            && apt-get install build-essential curl python python-dev python3-pip g++-4.8 gcc-4.8 -yq \
            && apt-get clean \
            && rm -rf /var/lib/apt/lists/*

      - name: Install Dependencies
        uses: ./.github/workflows/composite/npm
        with:
          version: ${{ matrix.node }}
          # https://github.com/actions/setup-node/issues/286#issuecomment-878865957
          cache: ''

      - name: Run Target
        uses: ./.github/workflows/composite/todoapp 

      - name: Run Tests
        run: npm run test:e2e 
        env:
          E2E_CLI_CMD: npx --yes @brightsec/cli@${{ inputs.version }}
          E2E_RUN_ID: ${{ format('{0}-{1}-{2}-{3}', github.run_number, github.run_attempt, github.job, strategy.job-index) }}
          E2E_CLUSTER: ${{ secrets.E2E_TEST_HOST }}
          E2E_REPEATER_API_KEY: ${{ secrets.E2E_TEST_TOKEN }}
          E2E_REPEATER_TARGET_URL: "http://localhost:9000"
          E2E_REPEATER_MAX_TEST_TIMEOUT: ${{ inputs.repeater_max_test_timeout }}